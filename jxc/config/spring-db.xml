<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="jdbc:oracle:thin:@192.168.10.103:1521:orcl"/>
        <property name="username" value="bypx_lsc"/>
        <property name="password" value="bypx_lsc"/>
        <!--连接池启动时创建的初始化连接数量-->
        <property name="initialSize" value="3"/>
        <!--连接池中可同时连接的最大连接数-->
        <property name="maxActive" value="30"/>
        <!--连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制-->
        <property name="maxIdle" value="6"/>
        <!--连接池中最小的空闲的连接数，低于这个数量会被创建新的连接-->
        <property name="minIdle" value="6"/>
        <!--空闲时是否进行验证，检查对象是否有效，默认为false-->
        <property name="testWhileIdle" value="true"/>
        <!--取得对象时是否进行验证，检查对象是否有效，默认为false-->
        <property name="testOnBorrow" value="true"/>
        <!--测试/验证连接池连接的SQL语句-->
        <property name="validationQuery" value="select 1"/>
    </bean>

    <!--配置jdbc模板对象-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <!--事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>